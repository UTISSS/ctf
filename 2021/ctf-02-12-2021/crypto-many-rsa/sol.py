from math import gcd
from Crypto.Util.number import long_to_bytes, inverse
n1, e, c1 = (12377507008500493031436511245880690186457805607905641643409305592765799561041442333029660192343660165935072068619335062452220645509421539358863226742889831, 65537, 1513658897701678298370902061060574903006383269173801109001661490995437914059647218131088014913662648323845070338296415178023809782060606925544480735246785)
n2, e, c2 = (10665424482430070479669154332232657989192768806462917006808445762277465953010907987547342104111486859096659293988425510377576234400715396869123034473948963, 65537, 4482390243836723767085013468983561637918739093897765528516098679286283200099230216829024131745896160089263030154288560936025446522389332144435241717831478)

q = gcd(n1, n2)
p = n1 // q
r = n2 // q

print(long_to_bytes(pow(c1, inverse(e, (p-1)*(q-1)), n1)))
print(long_to_bytes(pow(c2, inverse(e, (q-1)*(r-1)), n2)))
