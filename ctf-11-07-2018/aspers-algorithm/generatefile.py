import os

flag_padding

def flag_binary():
    flag = 'utflag{y0u_4r3_n0t_a_r4nd0m_numb3r_g3n3r4t0r}'
    binary = ''.join(format(ord(i),'b').zfill(8) for i in flag)
    return binary

def generate_flag_key(length):
    flag = flag_binary()
    remainder = length - len(flag)
    return flag + flag_padding[:remainder]

def random_1():
    return ord(os.urandom(1)) % 2

def generate_key2(message, key):
    key2 = ""
    for i in range(length):
        messageChar = message[i]
        keyChar = key[i]
        if messageChar == '0' and keyChar == '0':
            key2 += '0'
        elif messageChar == '0' and keyChar == '1':
            key2 += '1'
        elif messageChar == '1' and keyChar == '0':
            key2 += '1'
        elif messageChar == '1' and keyChar == '1':
            key2 += '0'
        else:
            print(messageChar + ' ' + keyChar)

    return key2


def generate_random_bitstring(length):
    string = ""
    for i in range(length):
        if random_1() == 1:
            string += '0'
        else:
            string += '1'
    return string

if __name__ == "__main__":
    length = 4384
    flag_key = generate_flag_key(length)
    key1 = open("key.txt", 'r').read()[:length]
    key2 = generate_key2(flag_key, key1)
    assert(len(flag_key) == len(key1))
    assert(len(key1) == len(key2))
    
    key1_index = 18213
    key2_index = 43819

    output = open('file.txt', 'w')
    for i in range(0, 50000):
        if i + 1 == key1_index:
            output.write(key1 + "\n")
        elif i + 1 == key2_index:
            output.write(key2 + "\n")
        else:
            output.write(generate_random_bitstring(length) + "\n")

output.close()
